name: Model Deployment

on: [push]

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv add pylint
        uv sync
    - name: Analysing the code with pylint
      run: |
        uv run pylint $(git ls-files '*.py') --fail-under 5
  
  train:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv sync
    - name: Prepare data
      run: |
        uv run python scripts/prepare_data.py --input_data data/raw/iris.csv --output_folder data/processed
    - name: Start MLFLow server
      run: |
        export MLFLOW_TRACKING_URI="http://127.0.0.1:8080"
        export MLFLOW_EXPERIMENT_NAME="iris_experiment"
        uv run mlflow server --host 127.0.0.1 --port 8080
    - name: Train the model
      run: |
        uv run python scripts/train.py --data_folder data/processed --model_name "iris_model"
    - name: Evaluate model
      run: |
        uv run python scripts/evaluate_model.py --data_folder data/processed --model_name "iris_model"

  deploy:
    if: false
    environment: Global
    needs: train
    runs-on: ubuntu-latest
    env:
        IMAGE: ${{ secrets.DOCKER_USERNAME }}/mlflow-service:latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Docker
      run: |
        # Add Docker's official GPG key:
        sudo apt-get update
        sudo apt-get install ca-certificates curl
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc

        # Add the repository to Apt sources:
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update

        sudo apt-get install docker-ce docker-ce-cli

    - name: Build Docker image
      run: |
        cd fastapi-app
        docker build -t $IMAGE .

    - name: Push Docker image on docker hub
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker push $IMAGE
  
  deploy-with-docker-actions:
    if: false
    environment: Global
    needs: train
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: ./fastapi-app
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/mlflow-service-2:latest
